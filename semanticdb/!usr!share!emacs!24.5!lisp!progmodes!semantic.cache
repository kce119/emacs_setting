;; Object progmodes/
;; SEMANTICDB Tags save file
(semanticdb-project-database-file "progmodes/"
  :tables
  (list
    (semanticdb-table "gud.el.gz"
      :major-mode 'emacs-lisp-mode
      :tags 
        '( ("comint" include nil nil [1729 1746])
            ("gdb-active-process" variable nil nil [1748 1775])
            ("gdb-define-alist" variable nil nil [1776 1801])
            ("gdb-macro-info" variable nil nil [1802 1825])
            ("gdb-show-changed-values" variable nil nil [1826 1858])
            ("gdb-source-window" variable nil nil [1859 1885])
            ("gdb-var-list" variable nil nil [1886 1907])
            ("hl-line-mode" variable nil nil [1908 1929])
            ("hl-line-sticky-flag" variable nil nil [1930 1958])
            ("gud" customgroup (:user-visible-flag t) nil [2096 2275])
            ("gud-key-prefix" variable (:default-value "") nil [2278 2402])
            ("global-set-key" code nil nil [2404 2465])
            ("gud-marker-filter" variable nil nil [2537 2567])
            ("put" code nil nil [2568 2611])
            ("gud-find-file" variable nil nil [2612 2638])
            ("put" code nil nil [2639 2678])
            ("gud-marker-filter" function (:arguments ("args")) nil [2680 2751])
            ("gud-minor-mode" variable nil nil [2753 2780])
            ("put" code nil nil [2781 2821])
            ("gud-comint-buffer" variable nil nil [2823 2853])
            ("gud-keep-buffer" variable nil nil [2855 2883])
            ("gud-symbol" function (:arguments ("sym" "soft" "minor-mode")) nil [2885 3318])
            ("gud-val" function (:arguments ("sym" "minor-mode")) nil [3320 3508])
            ("gud-running" variable nil nil [3510 3619])
            ("gud-target-name" variable (:default-value "--unknown--") nil [3621 3728])
            ("gud-goto-info" function (:user-visible-flag t) nil [3772 3984])
            ("gud-tool-bar-item-visible-no-fringe" function nil nil [3986 4257])
            ("declare-function" code nil nil [4259 4313])
            ("gud-stop-subjob" function nil nil [4315 4708])
            ("easy-mmode-defmap" code nil nil [4710 8063])
            ("easy-mmode-defmap" code nil nil [8065 9866])
            ("let" code nil nil [9868 10036])
            ("gud-mode-map" variable (:default-value (make-sparse-keymap)) nil [10038 10165])
            ("gud-tool-bar-map" variable (:default-value (let ((map (make-sparse-keymap))) (dolist (x (quote ((gud-break . "gud/break") (gud-remove . "gud/remove") (gud-print . "gud/print") (gud-pstar . "gud/pstar") (gud-pp . "gud/pp") (gud-watch . "gud/watch") (gud-run . "gud/run") (gud-go . "gud/go") (gud-stop-subjob . "gud/stop") (gud-cont . "gud/cont") (gud-until . "gud/until") (gud-next . "gud/next") (gud-step . "gud/step") (gud-finish . "gud/finish") (gud-nexti . "gud/nexti") (gud-stepi . "gud/stepi") (gud-up . "gud/up") (gud-down . "gud/down") (gud-goto-info . "info"))) map) (tool-bar-local-item-from-menu (car x) (cdr x) map gud-minor-mode-map)))) nil [10167 10871])
            ("gud-file-name" function (:arguments ("f")) nil [10873 11626])
            ("declare-function" code nil nil [11628 11682])
            ("gud-find-file" function (:arguments ("file")) nil [11684 12598])
            ("gud-def" function (:arguments ("func" "cmd" "key" "doc")) nil [13168 14558])
            ("gud-last-frame" variable nil nil [14778 14805])
            ("gud-last-last-frame" variable nil nil [14975 15007])
            ("dframe" include nil nil [16119 16136])
            ("gud-last-speedbar-stackframe" variable nil nil [16173 16343])
            ("gud-speedbar-key-map" variable nil nil [16345 16428])
            ("declare-function" code nil nil [16489 16548])
            ("gud-speedbar-item-info" function nil nil [16550 16824])
            ("declare-function" code nil nil [16826 16891])
            ("declare-function" code nil nil [16892 16960])
            ("speedbar-mode-functions-list" variable nil nil [16961 16998])
            ("gud-install-speedbar-variables" function nil nil [17000 17852])
            ("gud-speedbar-menu-items" variable (:default-value (quote (["Jump to stack frame" speedbar-edit-line :visible (not (eq (buffer-local-value (quote gud-minor-mode) gud-comint-buffer) (quote gdbmi)))] ["Edit value" speedbar-edit-line :visible (eq (buffer-local-value (quote gud-minor-mode) gud-comint-buffer) (quote gdbmi))] ["Delete expression" gdb-var-delete :visible (eq (buffer-local-value (quote gud-minor-mode) gud-comint-buffer) (quote gdbmi))] ["Auto raise frame" gdb-speedbar-auto-raise :style toggle :selected gdb-speedbar-auto-raise :visible (eq (buffer-local-value (quote gud-minor-mode) gud-comint-buffer) (quote gdbmi))] ("Output Format" :visible (eq (buffer-local-value (quote gud-minor-mode) gud-comint-buffer) (quote gdbmi)) ["Binary" (gdb-var-set-format "binary") t] ["Natural" (gdb-var-set-format "natural") t] ["Hexadecimal" (gdb-var-set-format "hexadecimal") t])))) nil [17854 18791])
            ("if" code nil nil [18842 18969])
            ("gud-expansion-speedbar-buttons" function (:arguments ("_directory" "_zero")) nil [18971 19191])
            ("declare-function" code nil nil [19193 19313])
            ("declare-function" code nil nil [19314 19413])
            ("declare-function" code nil nil [19414 19522])
            ("gud-speedbar-buttons" function (:arguments ("buffer")) nil [19524 23249])
            ("gud-gdb-history" variable nil nil [23389 23417])
            ("gud-gud-gdb-command-name" variable (:default-value "gdb --fullname") nil [23419 23635])
            ("gud-gdb-marker-regexp" variable (:default-value (concat "\\(.:?[^" ":" "
]*\\)" ":" "\\([0-9]*\\)" ":" ".*
")) nil [23637 23884])
            ("gud-marker-acc" variable nil nil [24230 24256])
            ("make-variable-buffer-local" code nil nil [24257 24301])
            ("gud-gdb-marker-filter" function (:arguments ("string")) nil [24303 26226])
            ("easy-mmode-defmap" code nil nil [26228 26413])
            ("gud-query-cmdline" function (:arguments ("minor-mode" "init")) nil [26415 27108])
            ("gdb-first-prompt" variable (:default-value t) nil [27110 27137])
            ("gud-filter-pending-text" variable nil nil [27139 27253])
            ("gud-gdb-completion-function" variable nil nil [27457 27713])
            ("declare-function" code nil nil [27752 27802])
            ("gud-gdb" function
               (:user-visible-flag t
                :arguments ("command-line"))
                nil [27893 30395])
            ("gud-gdb-fetch-lines-in-progress" variable nil nil [30461 30501])
            ("gud-gdb-fetch-lines-string" variable nil nil [30580 30615])
            ("gud-gdb-fetch-lines-break" variable nil nil [30676 30710])
            ("gud-gdb-fetched-lines" variable nil nil [30773 30803])
            ("gud-gdb-completions" function (:arguments ("context" "command")) nil [30805 31476])
            ("gud-gdb-completions-1" function (:arguments ("complete-list")) nil [31536 32370])
            ("gud-gdb-completion-at-point" function nil nil [32372 33382])
            ("gud-gdb-fetch-lines-filter" function (:arguments ("string")) nil [33821 34505])
            ("declare-function" code nil nil [34656 34730])
            ("declare-function" code nil nil [34731 34798])
            ("gud-gdb-goto-stackframe" function (:arguments ("_text" "token" "_indent")) nil [34800 35021])
            ("gud-gdb-fetched-stack-frame" variable nil nil [35023 35106])
            ("gud-gdb-get-stackframe" function (:arguments ("buffer")) nil [35108 36221])
            ("gud-gdb-run-command-fetch-lines" function (:arguments ("command" "buffer" "skip")) nil [36351 37268])
            ("gud-sdb-history" variable nil nil [37408 37436])
            ("gud-sdb-needs-tags" variable (:default-value (not (file-exists-p "/var"))) nil [37438 37566])
            ("gud-sdb-lastfile" variable nil nil [37568 37597])
            ("gud-sdb-marker-filter" function (:arguments ("string")) nil [37599 39214])
            ("gud-sdb-find-file" function (:arguments ("f")) nil [39216 39316])
            ("sdb" function
               (:user-visible-flag t
                :arguments ("command-line"))
                nil [39333 40678])
            ("gud-dbx-history" variable nil nil [40817 40845])
            ("gud-dbx-directories" variable nil nil [40847 41235])
            ("gud-dbx-massage-args" function (:arguments ("_file" "args")) nil [41237 41511])
            ("gud-dbx-marker-filter" function (:arguments ("string")) nil [41513 42593])
            ("gud-mips-p" variable (:default-value (or (string-match "^mips-[^-]*-ultrix" system-configuration) (string-match "^mips-[^-]*-riscos" system-configuration) (string-match "^mips-[^-]*-osf1" system-configuration) (string-match "^alpha[^-]*-[^-]*-osf" system-configuration))) nil [42744 43172])
            ("gud-dbx-command-name" variable (:default-value (concat "dbx" (if gud-mips-p " -emacs"))) nil [43174 43246])
            ("gud-mipsdbx-marker-filter" function (:arguments ("string")) nil [43386 45043])
            ("gud-irix-p" variable (:default-value (and (string-match "^mips-[^-]*-irix" system-configuration) (not (string-match "irix[6-9]\\.[1-9]" system-configuration)))) nil [46035 46353])
            ("gud-dbx-use-stopformat-p" variable (:default-value (string-match "irix[6-9]\\.[1-9]" system-configuration)) nil [46354 46600])
            ("gud-irixdbx-marker-filter" function (:arguments ("string")) nil [47846 49562])
            ("gud-dguxdbx-marker-filter" function (:arguments ("string")) nil [50189 51223])
            ("dbx" function
               (:user-visible-flag t
                :arguments ("command-line"))
                nil [51240 53860])
            ("gud-xdb-history" variable nil nil [54021 54049])
            ("gud-xdb-directories" variable nil nil [54051 54439])
            ("gud-xdb-massage-args" function (:arguments ("_file" "args")) nil [54441 54715])
            ("gud-xdb-marker-filter" function (:arguments ("string")) nil [54792 55526])
            ("xdb" function
               (:user-visible-flag t
                :arguments ("command-line"))
                nil [55543 56955])
            ("gud-perldb-history" variable nil nil [57100 57131])
            ("gud-perldb-massage-args" function (:arguments ("_file" "args")) nil [57133 58444])
            ("gud-perldb-marker-filter" function (:arguments ("string")) nil [58790 61284])
            ("gud-perldb-command-name" variable (:default-value "perl -d") nil [61286 61422])
            ("perldb" function
               (:user-visible-flag t
                :arguments ("command-line"))
                nil [61439 62802])
            ("gud-pdb-history" variable nil nil [62959 62987])
            ("gud-pdb-marker-regexp" variable (:default-value "^> \\([-a-zA-Z0-9_/.:\\]*\\|<string>\\)(\\([0-9]+\\))\\([a-zA-Z0-9_]*\\|\\?\\|<module>\\)()\\(->[^
]*\\)?[
]") nil [63122 63271])
            ("gud-pdb-marker-regexp-file-group" variable (:default-value 1) nil [63273 63316])
            ("gud-pdb-marker-regexp-line-group" variable (:default-value 2) nil [63317 63360])
            ("gud-pdb-marker-regexp-fnname-group" variable (:default-value 3) nil [63361 63406])
            ("gud-pdb-marker-regexp-start" variable (:default-value "^> ") nil [63408 63450])
            ("gud-pdb-marker-filter" function (:arguments ("string")) nil [63796 65606])
            ("gud-pdb-command-name" variable (:default-value "pdb") nil [65608 65794])
            ("pdb" function
               (:user-visible-flag t
                :arguments ("command-line"))
                nil [65811 67126])
            ("gud-jdb-command-name" variable (:default-value "jdb") nil [70484 70597])
            ("gud-jdb-use-classpath" variable (:default-value t) nil [70599 71313])
            ("gud-jdb-classpath" variable nil nil [71315 72254])
            ("gud-jdb-sourcepath" variable nil nil [72256 72477])
            ("gud-marker-acc-max-length" variable (:default-value 4000) nil [72479 72723])
            ("gud-jdb-history" variable nil nil [72725 72798])
            ("gud-jdb-directories" variable (:default-value (list ".")) nil [72842 73424])
            ("gud-jdb-source-files" variable nil nil [73426 73521])
            ("gud-jdb-class-source-alist" variable nil nil [73624 73733])
            ("gud-jdb-analysis-buffer" variable nil nil [73790 73826])
            ("gud-jdb-classpath-string" variable nil nil [73828 73903])
            ("gud-jdb-build-source-files-list" function (:arguments ("path" "extn")) nil [73905 74274])
            ("gud-jdb-skip-whitespace" function nil nil [74307 74378])
            ("gud-jdb-skip-single-line-comment" function nil nil [74429 74488])
            ("gud-jdb-skip-traditional-or-documentation-comment" function nil nil [74548 74871])
            ("gud-jdb-skip-whitespace-and-comments" function nil nil [74952 75298])
            ("gud-jdb-skip-id-ish-thing" function nil nil [75460 75538])
            ("gud-jdb-skip-string-literal" function nil nil [75577 75782])
            ("gud-jdb-skip-character-literal" function nil nil [75824 76029])
            ("gud-jdb-skip-block" function nil nil [76209 77470])
            ("gud-jdb-analyze-source" function (:arguments ("buf" "file")) nil [77662 79862])
            ("gud-jdb-build-class-source-alist-for-file" function (:arguments ("file")) nil [79864 80023])
            ("gud-jdb-build-class-source-alist" function (:arguments ("sources")) nil [80183 80495])
            ("gud-jdb-massage-args" function (:arguments ("_file" "args")) nil [80597 82260])
            ("gud-jdb-find-source-file" function (:arguments ("p")) nil [82464 82545])
            ("gud-jdb-lowest-stack-level" variable (:default-value 999) nil [82604 82643])
            ("gud-jdb-find-source-using-classpath" function (:arguments ("p")) nil [82645 83572])
            ("gud-jdb-find-source" function (:arguments ("_string")) nil [83574 83821])
            ("gud-jdb-parse-classpath-string" function (:arguments ("string")) nil [83823 84143])
            ("gud-jdb-marker-filter" function (:arguments ("string")) nil [84254 88385])
            ("gud-jdb-command-name" variable (:default-value "jdb") nil [88387 88465])
            ("jdb" function
               (:user-visible-flag t
                :arguments ("command-line"))
                nil [88482 91688])
            ("gud-delete-prompt-marker" variable nil nil [93664 93701])
            ("put" code nil nil [93705 93741])
            ("define-derived-mode" code nil nil [93743 96618])
            ("gud-chdir-before-run" variable (:default-value t) nil [96620 96744])
            ("declare-function" code nil nil [96746 96804])
            ("declare-function" code nil nil [96805 96882])
            ("gud-common-init" function (:arguments ("command-line" "massage-args" "marker-filter" "find-file")) nil [97124 100080])
            ("gud-set-buffer" function nil nil [100082 100189])
            ("gud-filter-defer-flag" variable nil nil [100191 100338])
            ("gud-filter" function (:arguments ("proc" "string")) nil [100516 102811])
            ("gud-minor-mode-type" variable nil nil [102813 102845])
            ("gud-overlay-arrow-position" variable nil nil [102846 102885])
            ("add-to-list" code nil nil [102886 102956])
            ("declare-function" code nil nil [102958 102998])
            ("declare-function" code nil nil [102999 103073])
            ("speedbar-previously-used-expansion-list-name" variable nil nil [103074 103127])
            ("gud-sentinel" function (:arguments ("proc" "msg")) nil [103129 104749])
            ("gud-kill-buffer-hook" function nil nil [104751 104980])
            ("gud-reset" function nil nil [104982 105205])
            ("gud-display-frame" function (:user-visible-flag t) nil [105207 105575])
            ("declare-function" code nil nil [105577 105634])
            ("declare-function" code nil nil [105635 105692])
            ("declare-function" code nil nil [105693 105756])
            ("gud-display-line" function (:arguments ("true-file" "line")) nil [106160 107522])
            ("gud-format-command" function (:arguments ("str" "arg")) nil [107771 109482])
            ("gud-read-address" function nil nil [109484 110095])
            ("gud-call" function (:arguments ("fmt" "arg")) nil [110097 110251])
            ("gud-basic-call" function
               (:user-visible-flag t
                :arguments ("command"))
                nil [110253 111177])
            ("gud-refresh" function
               (:user-visible-flag t
                :arguments ("arg"))
                nil [111179 111398])
            ("gud-find-expr-function" variable (:default-value (quote gud-find-c-expr)) nil [111570 111618])
            ("gud-find-expr" function (:arguments ("args")) nil [111620 112353])
            ("gud-find-c-expr" function (:user-visible-flag t) nil [112515 113377])
            ("gud-innermost-expr" function nil nil [113379 113964])
            ("gud-backward-sexp" function nil nil [113966 114105])
            ("gud-forward-sexp" function nil nil [114107 114242])
            ("gud-prev-expr" function nil nil [114244 114696])
            ("gud-next-expr" function nil nil [114698 115153])
            ("gud-expr-compound-sep" function (:arguments ("span-start" "span-end")) nil [115155 115918])
            ("gud-expr-compound" function (:arguments ("first" "second")) nil [115920 116886])
            ("declare-function" code nil nil [116889 116943])
            ("declare-function" code nil nil [116944 116998])
            ("gud-find-class" function (:arguments ("f" "_line")) nil [117000 121376])
            ("gdb-script-mode-syntax-table" variable (:default-value (let ((st (make-syntax-table))) (modify-syntax-entry 39 "\"" st) (modify-syntax-entry 35 "<" st) (modify-syntax-entry 10 ">" st) st)) nil [121594 121783])
            ("gdb-script-font-lock-keywords" variable (:default-value (quote (("^define\\s-+\\(\\(\\w\\|\\s_\\)+\\)" (1 font-lock-function-name-face)) ("\\$\\(\\w+\\)" (1 font-lock-variable-name-face)) ("^\\s-*\\(\\w\\(\\w\\|\\s_\\)*\\)" (1 font-lock-keyword-face))))) nil [121785 122024])
            ("gdb-script-syntax-propertize-function" variable
               (:constant-flag t
                :default-value (syntax-propertize-rules ("^document\\s-.*\\(
\\)" (1 "< b")) ("^end\\(\\>\\)" (1 (ignore (when (and (> (match-beginning 0) (point-min)) (eq 1 (nth 7 (save-excursion (syntax-ppss (1- (match-beginning 0))))))) (put-text-property (1- (match-beginning 0)) (match-beginning 0) (quote syntax-table) (eval-when-compile (string-to-syntax "> b"))) (put-text-property (1- (match-beginning 0)) (match-end 0) (quote syntax-multiline) t)))))))
                nil [122026 123343])
            ("gdb-script-font-lock-syntactic-face" function (:arguments ("state")) nil [123345 123514])
            ("gdb-script-basic-indent" variable (:default-value 2) nil [123516 123550])
            ("gdb-script-skip-to-head" function nil nil [123552 123822])
            ("gdb-script-calculate-indentation" function nil nil [123824 124373])
            ("gdb-script-indent-line" function (:user-visible-flag t) nil [124375 124997])
            ("gdb-script-beginning-of-defun" function nil nil [125028 125338])
            ("gdb-script-end-of-defun" function nil nil [125369 125592])
            ("define-derived-mode" code nil nil [125609 126669])
            ("tooltip-mode" variable nil nil [126722 126743])
            ("define-minor-mode" code nil nil [126760 128312])
            ("define-obsolete-variable-alias" code nil nil [128314 128423])
            ("gud-tooltip-modes" variable (:default-value (quote (gud-mode c-mode c++-mode fortran-mode python-mode))) nil [128425 128610])
            ("define-obsolete-variable-alias" code nil nil [128612 128725])
            ("gud-tooltip-display" variable (:default-value (quote ((eq (tooltip-event-buffer gud-tooltip-event) (marker-buffer gud-overlay-arrow-position))))) nil [128727 129090])
            ("gud-tooltip-echo-area" variable nil nil [129092 129236])
            ("make-obsolete-variable" code nil nil [129238 129331])
            ("gud-tooltip-change-major-mode" function nil nil [129366 129557])
            ("gud-tooltip-activate-mouse-motions-if-enabled" function nil nil [129559 130006])
            ("gud-tooltip-mouse-motions-active" variable nil nil [130008 130129])
            ("gud-tooltip-activate-mouse-motions" function (:arguments ("activatep")) nil [130453 130930])
            ("tooltip-last-mouse-motion-event" variable nil nil [130932 130972])
            ("declare-function" code nil nil [130973 131038])
            ("declare-function" code nil nil [131039 131096])
            ("gud-tooltip-mouse-motion" function
               (:user-visible-flag t
                :arguments ("event"))
                nil [131098 131373])
            ("gud-tooltip-dereference" variable nil nil [131395 131547])
            ("gud-tooltip-event" variable nil nil [131549 131701])
            ("gud-tooltip-dereference" function
               (:user-visible-flag t
                :arguments ("arg"))
                nil [131703 132110])
            ("define-obsolete-function-alias" code nil nil [132112 132240])
            ("tooltip-use-echo-area" variable nil nil [132241 132271])
            ("declare-function" code nil nil [132272 132344])
            ("declare-function" code nil nil [132345 132411])
            ("gud-tooltip-process-output" function (:arguments ("process" "output")) nil [132735 133066])
            ("gud-tooltip-print-command" function (:arguments ("expr")) nil [133068 133359])
            ("declare-function" code nil nil [133361 133434])
            ("declare-function" code nil nil [133435 133493])
            ("declare-function" code nil nil [133494 133551])
            ("gud-tooltip-tips" function (:arguments ("event")) nil [133553 135889])
            ("gud" package nil nil [135891 135905]))          
      :file "gud.el.gz"
      :pointmax 135928
      :fsize 36743
      :lastmodtime '(21788 61018 0 0)
      :unmatched-syntax '((close-paren 16136 . 16137) (symbol 16101 . 16118) (open-paren 16100 . 16101))))
  :file "!usr!share!emacs!24.5!lisp!progmodes!semantic.cache"
  :semantic-tag-version "2.0"
  :semanticdb-version "2.2")
